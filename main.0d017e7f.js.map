{"version":3,"sources":["scripts/main.js"],"names":["listUrl","detailsUrl","getPhones","fetch","then","responce","ok","setTimeout","Promise","reject","Error","status","headers","get","includes","json","result","getPhonesDetails","ids","response","phones","idArr","map","phone","id","div","document","createElement","body","append","all","p","textContent","name","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAN,0EAGMC,EAAN,sEAGA,SAASC,IACAC,OAAAA,MAAMH,GACVI,KAAK,SAAAC,GACA,IAACA,EAASC,GACNC,MAAAA,WAAW,WACRC,OAAAA,QAAQC,OAAO,IAAIC,MAAM,iBAAmBL,EAASM,UAC3D,KAGD,IAACN,EAASO,QAAQC,IAAI,gBAAgBC,SAAS,oBAC3CP,MAAAA,WAAW,WACRC,OAAAA,QAAQC,OAAO,IAAIC,MAAM,gCAC9BL,EAASM,UACV,KAGEN,OAAAA,EAASU,SAEjBX,KAAK,SAAAY,GAAUA,OAAAA,IAGpB,SAASC,EAAiBC,GACjBf,OAAAA,MAASF,GAAAA,OAAAA,EAAciB,KAAAA,OAAAA,EAAvB,UACJd,KAAK,SAAAe,GACA,OAACA,EAASb,GAIPa,EAASJ,OAHPP,QAAQC,OAAO,IAAIC,MAAM,qCAOxCR,IACGE,KAAK,SAAAgB,GACEC,IAAAA,EAAQD,EAAOE,IAAI,SAAAC,GAASN,OAAAA,EAAiBM,EAAMC,MAEnDC,EAAMC,SAASC,cAAc,OAEnCD,SAASE,KAAKC,OAAOJ,GAErBjB,QAAQsB,IAAIT,GAAOjB,KAAK,SAAAY,GACtBA,EAAOM,IAAI,SAAAC,GACHQ,IAAAA,EAAIL,SAASC,cAAc,KAEjCI,EAAEC,YAAcT,EAAMU,KACtBP,SAASE,KAAKC,OAAOE,GACrBN,EAAII,OAAOE,SAIhBG,MAAM,SAAAC,GAASA,OAAAA","file":"main.0d017e7f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listUrl = `https://mate-academy.github.io/phone-catalogue-static/api/\nphones.json`;\n\nconst detailsUrl = `\nhttps://mate-academy.github.io/phone-catalogue-static/api/phones/`;\n\nfunction getPhones() {\n  return fetch(listUrl)\n    .then(responce => {\n      if (!responce.ok) {\n        throw setTimeout(() => {\n          return Promise.reject(new Error('No data found ' + responce.status));\n        }, 5000);\n      }\n\n      if (!responce.headers.get('content-type').includes('application/json')) {\n        throw setTimeout(() => {\n          return Promise.reject(new Error('Content-type is not suported '\n          + responce.status));\n        }, 5000);\n      }\n\n      return responce.json();\n    })\n    .then(result => result);\n}\n\nfunction getPhonesDetails(ids) {\n  return fetch(`${detailsUrl}/${ids}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error('Something has gone really bad!'));\n      }\n\n      return response.json();\n    });\n}\n\ngetPhones()\n  .then(phones => {\n    const idArr = phones.map(phone => getPhonesDetails(phone.id));\n\n    const div = document.createElement('div');\n\n    document.body.append(div);\n\n    Promise.all(idArr).then(result => {\n      result.map(phone => {\n        const p = document.createElement('p');\n\n        p.textContent = phone.name;\n        document.body.append(p);\n        div.append(p);\n      });\n    });\n  })\n  .catch(error => error);\n"]}